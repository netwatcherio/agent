{{- $user_id := .Values.user_id | required ".Values.user_id is required." -}}
{{- $user_pin := .Values.user_pin | required ".Values.user_pin is required." -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  labels:
    app: netwatcher-agent
  name: netwatcher-agent
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: netwatcher-agent
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: netwatcher-agent
    spec:
      containers:
      - env:
        - name: ENV_HOST
          value: "{{ .Values.netwatcher.host }}"
        - name: ENV_HOST_WS
          value: "{{ .Values.netwatcher.host_ws }}"
        - name: ID
          value: "{{ $user_id }}"
        - name: PIN
          value: "{{ $user_pin }}"
        image: docker.io/shaunagostinho/netwatcher-agent:latest
        imagePullPolicy: Always
        name: netwatcher-agent
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 500m
            memory: 256Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
  replicas: 1
