name: Auto Release on master

on:
  push:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for tags

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Install zip
        run: sudo apt-get install zip -y

      - name: Get version metadata (timestamp + commit hash)
        id: version
        run: |
          # Option 1: Date + Time + Short Hash (always unique)
          TIMESTAMP=$(date +%Y%m%d-%H%M%S)
          HASH=$(git rev-parse --short HEAD)
          VERSION="v${TIMESTAMP}-${HASH}"
          
          # Option 2: Date + Hash + Build Number (if re-runs needed)
          # DATE=$(date +%Y%m%d)
          # HASH=$(git rev-parse --short HEAD)
          # BUILD_NUM=${{ github.run_number }}
          # VERSION="v${DATE}-${HASH}-build${BUILD_NUM}"
          
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Run build script
        run: |
          chmod +x ./build.sh
          ./build.sh

      - name: Create Git Tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a "${{ steps.version.outputs.version }}" -m "Automated release for ${{ steps.version.outputs.version }}"
          git push origin "${{ steps.version.outputs.version }}"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "Release ${{ steps.version.outputs.version }}"
          generate_release_notes: true
          body: |
            ## Automated Release
            
            **Commit:** ${{ github.sha }}
            **Branch:** master
            **Build:** ${{ github.run_number }}
            
            ### Changes
            See generated release notes below.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.version }}
          files: bin/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}